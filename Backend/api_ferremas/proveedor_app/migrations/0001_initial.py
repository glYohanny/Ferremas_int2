# Generated by Django 5.2.2 on 2025-06-25 23:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ubicacion_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razon_social', models.CharField(max_length=200, verbose_name='Razón Social')),
                ('rut', models.CharField(help_text='Ej: 12.345.678-K', max_length=12, unique=True, verbose_name='RUT')),
                ('nombre_fantasia', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre de Fantasía')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección Completa')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('nombre_contacto', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre del Contacto')),
                ('banco', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco')),
                ('tipo_cuenta', models.CharField(blank=True, choices=[('Corriente', 'Cuenta Corriente'), ('Ahorro', 'Cuenta de Ahorro'), ('Vista', 'Cuenta Vista'), ('Otra', 'Otra')], max_length=20, null=True, verbose_name='Tipo de Cuenta')),
                ('numero_cuenta', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número de Cuenta')),
                ('moneda', models.CharField(choices=[('CLP', 'Peso Chileno (CLP)'), ('USD', 'Dólar Americano (USD)'), ('EUR', 'Euro (EUR)'), ('UF', 'Unidad de Fomento (UF)')], default='CLP', max_length=3, verbose_name='Moneda')),
                ('activo', models.BooleanField(default=True, verbose_name='¿Está activo?')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('condiciones_pago', models.TextField(blank=True, help_text='Ej: Pago a 30 días, Descuento del 5% por pago anticipado.', null=True, verbose_name='Condiciones de Pago')),
                ('contrato', models.FileField(blank=True, null=True, upload_to='proveedores/contratos/', verbose_name='Contrato Adjunto')),
                ('fecha_inicio_relacion', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio de Relación')),
                ('comuna', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proveedores', to='ubicacion_app.comuna', verbose_name='Comuna')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['razon_social'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionProveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion', models.PositiveSmallIntegerField(help_text='Calificación general del desempeño del proveedor.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación (1-5 Estrellas)')),
                ('porcentaje_cumplimiento', models.FloatField(help_text='Porcentaje de pedidos entregados a tiempo en este período.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje de Cumplimiento de Entrega')),
                ('comentarios', models.TextField(blank=True, null=True, verbose_name='Comentarios Internos')),
                ('periodo_evaluado', models.CharField(help_text="Ej: 'Q1 2024', 'Anual 2023'", max_length=50)),
                ('fecha_evaluacion', models.DateField(auto_now_add=True)),
                ('proveedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='proveedor_app.proveedor')),
            ],
            options={
                'verbose_name': 'Evaluación de Proveedor',
                'verbose_name_plural': 'Evaluaciones de Proveedores',
                'ordering': ['-fecha_evaluacion', 'proveedor'],
                'unique_together': {('proveedor', 'periodo_evaluado')},
            },
        ),
    ]
