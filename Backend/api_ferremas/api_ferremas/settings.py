"""
Django settings for api_ferremas project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # Importar os
from dotenv import load_dotenv # Importar load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Cargar variables de entorno desde .env
# Asegúrate de que el archivo .env esté en la raíz del proyecto (junto a manage.py)
dotenv_path = BASE_DIR / '.env'
load_dotenv(dotenv_path=dotenv_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)*^kag@g3o9=0#vv3!o_-q_sqii3zq12$)0of%$aopvo+@!f@d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Django REST Framework
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',     # Añadir django-cors-headers
    'django_filters',  # Para filtros avanzados en DRF
    #webpay
    'transbank.webpay',

    # Mis Apps
    "ubicacion_app", # Ya estaba
    "usuario_app",
    "sucursal_app",
    "pedido_app",
    "pago_app",
    "integracion_app",
    "producto_app",
    "reporte_app",
    "proveedor_app",
    "contacto_app",
    "inventario_app",
    "promocion_app",
    "finanza_app",
    "bitacora_app",
    "configuracion_app",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Añadir el middleware de CORS
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'django.middleware.common.CommonMiddleware', # CorsMiddleware debe ir antes de CommonMiddleware si es posible
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api_ferremas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_ferremas.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-cl'
TIME_ZONE = 'America/Santiago'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuracion de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
    # Puedes añadir más configuraciones aquí, como:
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated', # Requiere autenticación por defecto
    # ],
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 'PAGE_SIZE': 10
}

# Configuracion de Simple JWT (opcional, pero útil para personalizar)
from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60), # Duración del token de acceso
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),    # Duración del token de refresco
    "ROTATE_REFRESH_TOKENS": False, # Si es True, cada vez que se usa un refresh token, se emite uno nuevo
    "BLACKLIST_AFTER_ROTATION": True,
}

# Modelo de Usuario Personalizado
AUTH_USER_MODEL = 'usuario_app.Usuario'

# Configuraciones de Webpay Transbank
WEBPAY_COMMERCE_CODE = os.getenv('WEBPAY_COMMERCE_CODE')
WEBPAY_API_KEY_SECRET = os.getenv('WEBPAY_API_KEY_SECRET')
# Usar la URL de integración por defecto, o la de producción si está definida y DEBUG es False
WEBPAY_API_URL_INTEGRACION = "https://webpay3gint.transbank.cl/rswebpaytransaction/api/webpay/v1.2/transactions"
WEBPAY_API_URL_PRODUCCION = "https://webpay3g.transbank.cl/rswebpaytransaction/api/webpay/v1.2/transactions"
WEBPAY_API_URL = WEBPAY_API_URL_PRODUCCION if not DEBUG and os.getenv('WEBPAY_API_URL_PRODUCCION') else os.getenv('WEBPAY_API_URL', WEBPAY_API_URL_INTEGRACION)

# Configuraciones de CORS
# Durante el desarrollo, puedes ser más permisivo.
# En producción, sé lo más restrictivo posible.

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # El puerto por defecto de Vite para tu frontend React
    "http://127.0.0.1:5173",
]

# Opcional: si necesitas permitir todos los orígenes (NO RECOMENDADO PARA PRODUCCIÓN)
# CORS_ALLOW_ALL_ORIGINS = True

# Permitir que las cookies (incluida la CSRF) se envíen en solicitudes CORS
# CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_HEADERS = list(default_headers) + ['my-custom-header']

# Orígenes de confianza para CSRF (para peticiones POST desde diferentes dominios/puertos)
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:5173', # El origen de tu frontend Vite
    'http://127.0.0.1:5173',  # Añadir también la IP para el frontend
    # Es buena práctica también incluir los orígenes del backend si se accede directamente
    'http://localhost:8000',
    'http://127.0.0.1:8000',
]
CORS_ALLOW_CREDENTIALS = True # <--- AÑADE ESTA LÍNEA


FRONTEND_URL = os.getenv('FRONTEND_URL', 'http://localhost:5173') # Puerto por defecto de Vite

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # Muestra emails en la consola
DEFAULT_FROM_EMAIL = 'noreply@ferremas.com' # O el que prefieras